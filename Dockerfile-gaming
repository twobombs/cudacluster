FROM twobombs/deploy-nvidia-docker:dev

# force yes, force install 
COPY 90forceyes /etc/apt/apt.conf.d/
# add cl dev apps & dependancies
RUN apt-get update && apt-get install -y git software-properties-common ant freeglut3-dev openjdk-8-jdk qv4l2 ocl-icd-opencl-dev opencl-headers oclgrind python-setuptools python3-setuptools dkms glslang-tools && apt-get clean all && apt -y autoremove

# add CL drivers
# Aspeed onboard
# RUN cd /root && wget -q http://upload.aspeedtech.com/BIOS/v103_linux_freebsd_solaris.zip && unzip /root/v103_linux_freebsd_solaris.zip && rm *.zip
# Intel
# old: RUN cd /root && mkdir compute && cd compute && wget -q https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-gmmlib_18.4.1_amd64.deb && wget -q https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-igc-core_19.02.1330_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-igc-opencl_19.02.1330_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-opencl_19.03.12192_amd64.deb && dpkg -i --force-all *.deb && cd ..
RUN mkdir compute && cd compute && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-gmmlib_19.2.1_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-igc-core_1.0.9-2211_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-igc-opencl_1.0.9-2211_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-opencl_19.26.13286_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-ocloc_19.26.13286_amd64.deb && dpkg -i --force-all *.deb && cd .. && apt clean all && rm -R /compute
RUN git clone https://github.com/intel/clGPU.git && cd clGPU && chmod 755 make.sh && /bin/bash ./make.sh && cd .. && rm -R /clGPU

# AMD ( AMDGPU & ROCm )
RUN apt-get install -y mesa-opencl-icd dialog clinfo
RUN wget https://repo.radeon.com/amdgpu-install/22.10.2/ubuntu/bionic/amdgpu-install_22.10.2.50102-1_all.deb
RUN dpkg -i amdgpu-install_22.10.2.50102-1_all.deb 
# RUN amdgpu-install --accept-eula --usecase=opencl --open=rocr --no-dkms

# NVidia cl libs
RUN add-apt-repository -y ppa:graphics-drivers/dev && apt-get update
# RUN apt-get -o Dpkg::Options::="--force-overwrite" install nvidia-opencl-dev && apt-get clean all

RUN curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey |  apt-key add - 
RUN curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu20.04/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list
RUN apt-get update && apt-get install -y nvidia-docker2 docker.io && apt-get clean all

# NVidia hw integration
RUN mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute

# add NVulkan
RUN apt update && apt install -y --no-install-recommends vulkan-utils cmake ca-certificates libegl1-mesa-dev libdrm-intel1 libdrm-dev libxkbcommon-dev libwayland-dev libx11-xcb-dev libxkbcommon-dev libxrandr-dev python3 python3-distutils wget && apt clean all && rm -rf /var/lib/apt/lists/*
RUN ln -s /usr/bin/python3 /usr/bin/python
# make driver
RUN git clone https://github.com/KhronosGroup/Vulkan-ValidationLayers.git && cd /Vulkan-ValidationLayers && mkdir build && cd build && ../scripts/update_deps.py && cmake -C helper.cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build . && make install && ldconfig
RUN git clone https://github.com/KhronosGroup/Vulkan-Headers.git && cd /Vulkan-Headers && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=install .. && make install && ldconfig 
RUN git clone https://github.com/KhronosGroup/Vulkan-Loader.git && cd /Vulkan-Loader && mkdir build && cd build && cmake -DVULKAN_HEADERS_INSTALL_DIR=/Vulkan-Headers/build/install .. && make install && ldconfig
RUN mkdir -p /usr/local/include/vulkan && cp -r /Vulkan-Headers/build/install/include/vulkan/* /usr/local/include/vulkan && mkdir -p /usr/local/share/vulkan/registry && cp -r /Vulkan-Headers/build/install/share/vulkan/registry/* /usr/local/share/vulkan/registry
RUN rm -R /Vulkan-ValidationLayers && rm -R /Vulkan-Headers && rm -R /Vulkan-Loader 
# add vulkan ICD link
COPY nvidia_icd.json /etc/vulkan/icd.d/nvidia_icd.json

# add zink opengl vulkan wrapper
RUN pip install meson && pip install mako
# RUN apt install libdrm-dev 
RUN git clone https://gitlab.freedesktop.org/zmike/mesa.git && cd mesa && mkdir build && cd build && meson .. && ninja install

# install wine32 wine64 steam lutris
RUN export DEBIAN_FRONTEND=noninteractive && add-apt-repository ppa:lutris-team/lutris && apt-get -y -f install libtasn1-bin && apt-get install libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libxml2:i386 libasound2-plugins:i386 libsdl2-2.0-0:i386 libfreetype6:i386 libdbus-1-3:i386 libsqlite3-0:i386 && apt-get update && apt-get install --install-recommends -y winehq-stable steam && apt clean all && apt -y autoremove
RUN export DEBIAN_FRONTEND=noninteractive && apt update && apt -y install lutris && apt clean all && apt -y autoremove

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute

EXPOSE 6080

ENTRYPOINT /root/run
