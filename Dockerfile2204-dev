FROM twobombs/deploy-nvidia-docker:2204dev

# force yes, force install 
COPY 90forceyes /etc/apt/apt.conf.d/

# add cl dev apps & dependancies
RUN apt-get update && apt-get install -y git software-properties-common ant freeglut3-dev openjdk-8-jdk qv4l2 ocl-icd-libopencl1 opencl-headers ocl-icd-opencl-dev oclgrind python-setuptools python3-setuptools dkms intel-gpu-tools && apt-get clean all && apt -y autoremove

# Intel
# old: RUN cd /root && mkdir compute && cd compute && wget -q https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-gmmlib_18.4.1_amd64.deb && wget -q https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-igc-core_19.02.1330_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-igc-opencl_19.02.1330_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.03.12192/intel-opencl_19.03.12192_amd64.deb && dpkg -i --force-all *.deb && cd ..
# RUN mkdir compute && cd compute && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-gmmlib_19.2.1_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-igc-core_1.0.9-2211_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-igc-opencl_1.0.9-2211_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-opencl_19.26.13286_amd64.deb && wget https://github.com/intel/compute-runtime/releases/download/19.26.13286/intel-ocloc_19.26.13286_amd64.deb && dpkg -i --force-all *.deb && cd .. && apt clean all && rm -R /compute
# RUN git clone https://github.com/intel/clGPU.git && cd clGPU && chmod 755 make.sh && /bin/bash ./make.sh && cd .. && rm -R /clGPU

RUN git clone https://github.com/twobombs/cudacluster.git
# install nvidia-docker bins for controller
RUN curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey |  apt-key add - 
RUN curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu20.04/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list
RUN apt-get update && apt-get install -y nvidia-docker2 docker.io && apt-get clean all

# fetch AMD ROCm drivers & prepare the image
# pre-install dev tools and ROCm packages

ARG ROCM_VERSION=6.3.4
ARG AMDGPU_VERSION=6.3.4

# AMD driver MI50+
RUN wget https://repo.radeon.com/amdgpu-install/6.3.4/ubuntu/jammy/amdgpu-install_6.3.60304-1_all.deb && apt install -y ./amdgpu-install_6.3.60304-1_all.deb && apt update && apt clean all && rm amdgpu-install_6.3.60304-1_all.deb
RUN apt install -y python3-setuptools python3-wheel && apt clean all
RUN apt install -y rocm radeontop && apt clean all

# enable AMD & NV OCL integrations
RUN echo "libamdocl64.so" > /etc/OpenCL/vendors/amdocl64_60304_76.icd
RUN echo "libnvidia-opencl.so.1" >  /etc/OpenCL/vendors/nvidia.icd

# add Intel OpenCL ICD as well
RUN apt install -y intel-opencl-icd && apt clean all

# fetch gguf model loader
RUN cd /root && curl -fLo koboldcpp https://github.com/LostRuins/koboldcpp/releases/latest/download/koboldcpp-linux-x64-oldpc && chmod +x koboldcpp

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute

EXPOSE 255 6080

ENTRYPOINT /root/run
